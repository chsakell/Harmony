@page "/projects/{id}/work-items"
@page "/boards/{id}/work-items"
@inject Microsoft.Extensions.Localization.IStringLocalizer<WorkItems> _localizer
@using Harmony.Application.DTO
@using Harmony.Client.Infrastructure.Helper

<MudPaper Style="height:calc(100vh - 100px);overflow:auto">
    <MudTable Hover="true" Elevation="25"
              CommitEditTooltip="Update item"
              CanCancelEdit="true"
              RowEditCommit="UpdateItem"
              RowEditCancel="CancelEdit"
              RowEditPreview="BackupItem"
              EditButtonPosition="TableEditButtonPosition.End"
              EditTrigger="TableEditTrigger.EditButton"
              T="CardDto"
              @bind-SelectedItems="_selectedCards"
              ServerData="@ReloadData" Dense="true" Striped="true" @ref="_table"
              Class="mt-4">
        <ToolBarContent>
            <div class="justify-center mud-text-align-center">
                <MudSelect MultiSelection="true" T="IssueTypeDto" Clearable="true"
                           MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionIssueTypesText))"
                           @bind-SelectedValues:get="_selectedIssueTypes"
                           @bind-SelectedValues:set="SetSelectedIssueTypes"
                           Label="Type" AnchorOrigin="Origin.BottomCenter">
                    @foreach (var type in _boardInfo.IssueTypes)
                    {
                        <MudSelectItem Value="type">
                            <MudStack Row="true">
                                <MudIcon Icon="@ColorHelper.GetIssueTypeIcon(type.Summary)"
                                         Color="ColorHelper.GetIssueTypeColor(type.Summary)" />
                                <MudText>@type.Summary</MudText>
                            </MudStack>
                        </MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="justify-center mud-text-align-center">
                <MudSelect MultiSelection="true" T="BoardListDto" Clearable="true"
                           MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionBoardListsText))"
                           @bind-SelectedValues:get="_selectedLists"
                           @bind-SelectedValues:set="SetSelectedLists"
                           FullWidth="false"
                           T="BoardListDto" Label="Status" AnchorOrigin="Origin.BottomCenter">
                    @foreach (var list in _boardInfo.Lists)
                    {
                        <MudSelectItem Value="list">@list.Title</MudSelectItem>
                    }
                </MudSelect>
            </div>
            @if (_boardInfo.Type == Domain.Enums.BoardType.Scrum)
            {
                <div class="justify-center mud-text-align-center">
                    <MudSelect MultiSelection="true" T="SprintDto" Clearable="true"
                               MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionSprintsText))"
                               @bind-SelectedValues:get="_selectedSprints"
                               @bind-SelectedValues:set="SetSelectedSprints"
                               FullWidth="false"
                               T="BoardListDto" Label="Sprints" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var list in _boardInfo.ActiveSprints)
                        {
                            <MudSelectItem Value="list">@list.Name</MudSelectItem>
                        }
                    </MudSelect>
                </div>
            }
            <MudSpacer />
            <MudMenu AnchorOrigin="Origin.BottomLeft" Icon="@Icons.Material.Filled.Sort" Style="align-self:end">
                <MudMenuItem AutoClose="false">
                    @foreach (var sortableField in _sortableFields.Fields.OrderBy(f => f.Order))
                    {
                        <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                            <MudCheckBox @bind-Value="sortableField.Enabled" Label="@sortableField.Label"></MudCheckBox>
                            <MudRadioGroup @bind-Value="@sortableField.Descending">
                                <MudRadio Value="@(false)" Color="Color.Primary">ASC</MudRadio>
                                <MudRadio Value="@(true)" Color="Color.Secondary">DESC</MudRadio>
                            </MudRadioGroup>

                            @if (sortableField.Order < _sortableFields.MaxOrder)
                            {
                                <MudIcon Icon="@Icons.Material.Filled.MoveDown" @onclick="@(() => _sortableFields.MoveDown(sortableField))" Color="Color.Error" />
                            }
                            @if (sortableField.Order > 0)
                            {
                                <MudIcon Icon="@Icons.Material.Filled.MoveUp" @onclick="@(() => _sortableFields.MoveUp(sortableField))" Color="Color.Success" />
                            }
                        </MudStack>
                    }
                </MudMenuItem>
                <MudMenuItem>
                    <MudStack Justify="Justify.Center">
                        <MudButton OnClick="@(() => _table.ReloadServerData())" StartIcon="@Icons.Material.Filled.Sort">APPLY SORTING</MudButton>
                    </MudStack>
                </MudMenuItem>
            </MudMenu>
            <MudTextField T="string" DebounceInterval="300" Immediate="true" ValueChanged="@(s=>OnSearch(s))" Clearable="true" Placeholder="Search items by title.." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Key</MudTh>
            <MudTh>Title</MudTh>
            <MudTh>Type</MudTh>
            <MudTh>Status</MudTh>
            @if (_boardInfo.Type == Domain.Enums.BoardType.Scrum)
            {
                <MudTh>Story Points</MudTh>
            }
            <MudTh Style="text-align:right"></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="SerialKey">
                <MudTooltip Text="Click for full editing" Delay="2500">
                    <MudChip T="string" Label="true" Size="Size.Small" OnClick="() => EditCard(context)" Color="Color.Warning">@($"{_boardInfo.Key}-{context.SerialNumber}")</MudChip>
                </MudTooltip>
            </MudTd>
            <MudTd DataLabel="Title">
                <MudHighlighter Text="@context.Title" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="Type">
                <MudStack Row="true">
                    <MudIcon Icon="@ColorHelper.GetIssueTypeIcon(context.IssueType.Summary)"
                             Color="ColorHelper.GetIssueTypeColor(context.IssueType.Summary)" />
                    <MudText>@context.IssueType.Summary</MudText>
                </MudStack>
            </MudTd>
            <MudTd Style="width:160px" DataLabel="Status">
                <MudChip T="string" Variant="Variant.Text" Color="@GetBoardListColor(context.BoardListId)">
                    @(GetBoardList(context.BoardListId))
                </MudChip>
            </MudTd>
            @if (_boardInfo.Type == Domain.Enums.BoardType.Scrum)
            {
                <MudTd Style="width:160px" DataLabel="StoryPoints">
                    <MudChip T="string" Variant="Variant.Text" Color="Color.Primary">
                        @(context.StoryPoints?.ToString() ?? "-")
                    </MudChip>
                </MudTd>
            }
            <MudTd Style="text-align:right">
            </MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <MudTd DataLabel="SerialKey">
                <MudChip T="string" Label="true" Size="Size.Small" Color="Color.Warning">@($"{_boardInfo.Key}-{context.SerialNumber}")</MudChip>
            </MudTd>
            <MudTd DataLabel="Title">
                <MudTextField T="string" For="@(() => context.Title)" @bind-Value="context.Title" Label="Title"></MudTextField>
            </MudTd>
            <MudTd DataLabel="Type" Style="max-width:160px">
                <MudStack Row="true">
                    @if (_issueTypes != null)
                    {
                        <MudSelect T="IssueTypeDto" @bind-Value="context.IssueType"
                                   For="@(() => context.IssueType)"
                                   Placeholder="Select issue type"
                                   ToStringFunc="convertFunc"
                                   Label="Type" AnchorOrigin="Origin.BottomCenter"
                                   Variant="Variant.Outlined">
                            @foreach (var type in _issueTypes)
                            {
                                <MudSelectItem Value="type">
                                    <MudStack Row="true">
                                        <MudIcon Icon="@ColorHelper.GetIssueTypeIcon(type.Summary)"
                                                 Color="ColorHelper.GetIssueTypeColor(type.Summary)" />
                                        <MudText>@type.Summary</MudText>
                                    </MudStack>
                                </MudSelectItem>
                            }
                        </MudSelect>
                    }
                </MudStack>
            </MudTd>
            <MudTd Style="width:160px" DataLabel="Status">
                <MudChip T="string" Variant="Variant.Text" Color="@GetBoardListColor(context.BoardListId)">
                    @(GetBoardList(context.BoardListId))
                </MudChip>
            </MudTd>
            @if (_boardInfo.Type == Domain.Enums.BoardType.Scrum)
            {
                <MudTd DataLabel="StoryPoints" Style="width:160px">
                    <MudNumericField T="short?" Clearable="true" @bind-Value="@context.StoryPoints" Min="0" />
                </MudTd>
            }
            <MudTd Style="text-align:right">
            </MudTd>
        </RowEditingTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudPaper>