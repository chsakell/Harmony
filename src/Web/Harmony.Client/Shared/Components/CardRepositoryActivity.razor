@using Harmony.Client.Infrastructure.Helper
@if (!_dataLoaded)
{
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="50px" />
    <MudCardContent>
        <MudSkeleton Width="100%" />
        <MudSkeleton Width="100%" />
    </MudCardContent>
}
else if (_branches.Any())
{
    <MudPaper Class="mb-2">
        <MudButton StartIcon="@Icons.Custom.Brands.GitHub" Class="mt-2"
                   Variant="Variant.Outlined" FullWidth="true" OnClick="ViewRepositoryActivityDetails"
                   Color="Color.Primary">VIEW DETAILS</MudButton>
        <MudCarousel Class="mud-width-full" Style="height:150px;"
                     ShowArrows="@ShowArrows()" ShowBullets="false"
                     EnableSwipeGesture="true" AutoCycle="false" TData="object">
            @foreach (var branch in _branches)
            {
                <MudCarouselItem Transition="Transition.Slide" Color="@Color.Default">

                    <div class="d-flex flex-column flex-column justify-center align-center gap-4" style="height:100%">
                        <MudIcon Class="mx-auto" Icon="fa-solid fa-code-branch" Size="@Size.Large" />
                        <MudLink Href="@branch.BranchUrl" Target="_blank">@branch.Name</MudLink>
                    </div>

                </MudCarouselItem>
            }
            @foreach (var pullRequest in _branches.SelectMany(b => b.PullRequests))
            {
                <MudCarouselItem Transition="Transition.Slide" Color="@Color.Dark">

                    <div class="d-flex flex-column flex-column justify-center align-center gap-2" style="height:100%">
                        <MudIcon Class="mx-auto" Icon="fa-solid fa-code-pull-request" Size="@Size.Large" />
                        <MudLink Href="@pullRequest.HtmlUrl" Target="_blank">@pullRequest.Title</MudLink>
                        <MudChip T="string" Size="Size.Small" Color="@ColorHelper.GetPullRequestColor(pullRequest.State)">@pullRequest.State.ToString()</MudChip>
                    </div>

                </MudCarouselItem>
            }
            @foreach (var tag in _branches.SelectMany(b => b.Tags))
            {
                <MudCarouselItem Transition="Transition.Slide" Color="@Color.Dark">

                    <div class="d-flex flex-column flex-column justify-center align-center gap-2" style="height:100%">
                        <MudIcon Class="mx-auto" Icon="fa-solid fa-tag" Size="@Size.Large" />
                        <MudChip T="string" Size="Size.Small" Color="@Color.Info">@tag</MudChip>
                    </div>

                </MudCarouselItem>
            }
        </MudCarousel>
    </MudPaper>
}
else
{
    <MudPaper Class="mb-2">
        <MudButton StartIcon="@Icons.Material.Filled.AltRoute" Class="mt-2"
                   Variant="Variant.Outlined" FullWidth="true" OnClick="CopyToClipboard"
                   Color="Color.Primary">CREATE BRANCH</MudButton>
        <MudCard>
            <MudCardHeader Class="pb-0">
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Git command</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudTooltip ShowOnClick="false" ShowOnFocus="false" ShowOnHover="true" Text="Source control integration is required">
                        <MudIconButton Icon="@Icons.Material.Outlined.Info" Color="Color.Primary" Size="Size.Small" />
                    </MudTooltip>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudText Typo="Typo.body2"><strong><code>@GetGitSlug()</code></strong></MudText>
            </MudCardContent>
        </MudCard>
    </MudPaper>
}
