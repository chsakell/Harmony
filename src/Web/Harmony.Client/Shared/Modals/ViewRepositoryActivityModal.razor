@using Harmony.Client.Infrastructure.Helper
@using Harmony.Domain.Enums;
@inject Microsoft.Extensions.Localization.IStringLocalizer<EditCardLabelsModal> _localizer

<MudDialog>
    <TitleContent>
        @{
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Custom.Brands.GitHub" Class="mr-3 mb-n1" />
                @_localizer["Repository activity"]
            </MudText>
        }
    </TitleContent>
    <DialogContent>
        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
            <MudTabPanel Text="Branches" Icon="fa-solid fa-code-branch">
                <MudExpansionPanels>
                    @foreach (var branch in Branches)
                    {
                        <MudExpansionPanel>
                            <TitleContent>
                                <MudStack Row="true" AlignItems="AlignItems.Center">
                                    <MudLink Href="@branch.BranchUrl" Target="_blank">@branch.Name</MudLink>
                                    <MudText>created by</MudText>
                                    <MudAvatar>
                                        <MudImage Src="@branch.Creator.AvatarUrl"></MudImage>
                                    </MudAvatar>
                                    <MudChip T="string" Icon="@Icons.Custom.Brands.GitHub" Label="true" Color="Color.Primary">@branch.Creator.Login</MudChip>
                                </MudStack>
                            </TitleContent>
                            <ChildContent>
                                <MudStack>

                                    @if (branch.Commits.Any())
                                    {
                                        <MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Start" Reverse="false">
                                            @foreach (var commit in branch.Commits)
                                            {
                                                <MudTimelineItem Color="Color.Success" Variant="Variant.Filled">
                                                    <ItemContent>
                                                        <MudPaper Class="mb-2 pa-2">
                                                            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="mb-4">
                                                                <MudText Color="Color.Secondary" Typo="Typo.body2" GutterBottom="true">@commit.Author.Username &lt;@commit.Author.Email&gt</MudText>
                                                                <MudText Color="Color.Default">@commit.Timestamp.ToLocalTime().ToString("F")</MudText>
                                                            </MudStack>

                                                            <MudStack Row="true" AlignItems="AlignItems.Center">
                                                                <MudLink Href="@commit.Url">@commit.Message</MudLink>
                                                                @if (commit.Added.Any())
                                                                {
                                                                    <MudBadge Content="@commit.Added.Count" Color="Color.Primary" Overlap="true" Bordered="true" Class="mx-2">
                                                                        <MudButton Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Add" Color="Color.Warning">Added</MudButton>
                                                                    </MudBadge>
                                                                }
                                                                @if (commit.Modified.Any())
                                                                {
                                                                    <MudBadge Content="@commit.Modified.Count" Color="Color.Warning" Overlap="true" Bordered="true" Class="mx-2">
                                                                        <MudButton Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit" Color="Color.Warning">Edited</MudButton>
                                                                    </MudBadge>
                                                                }
                                                                @if (commit.Removed.Any())
                                                                {
                                                                    <MudBadge Content="@commit.Removed.Count" Color="Color.Error" Overlap="true" Bordered="true" Class="mx-2">
                                                                        <MudButton Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Deleted</MudButton>
                                                                    </MudBadge>
                                                                }
                                                            </MudStack>
                                                        </MudPaper>
                                                    </ItemContent>
                                                </MudTimelineItem>
                                            }
                                        </MudTimeline>
                                    }
                                </MudStack>
                            </ChildContent>
                        </MudExpansionPanel>
                        
                    }
                </MudExpansionPanels>
            </MudTabPanel>
            @if (Branches.Select(b => b.PullRequests).Any())
            {
                <MudTabPanel Text="Pull requests" Icon="fa-solid fa-code-pull-request">
                    <MudTable Items="@Branches.SelectMany(b => b.PullRequests)" Hover="true" Breakpoint="Breakpoint.Sm">
                        <HeaderContent>
                            <MudTh>Title</MudTh>
                            <MudTh>State</MudTh>
                            <MudTh>Source/Target</MudTh>
                            <MudTh></MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Title">
                                <MudLink Href="@context.HtmlUrl" Target="_blank">@context.Title</MudLink>
                            </MudTd>
                            <MudTd DataLabel="Status">
                                <MudChip T="string" Color="@ColorHelper.GetPullRequestColor(context.State)">@context.State.ToString()</MudChip>
                            </MudTd>
                            <MudTd DataLabel="Source/Target">
                                <MudStack>
                                    <MudText>@context.SourceBranch</MudText>
                                    <MudText>@context.TargetBranch</MudText>
                                </MudStack>
                            </MudTd>
                            <MudTd DataLabel="">
                                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                                    <MudTabPanel Icon="@Icons.Material.Filled.AssignmentInd" Text="Assign">
                                        @foreach (var assigne in context.Assignees)
                                        {
                                            <MudStack Row="true">
                                                <MudAvatar>
                                                    <MudImage Src="@assigne.AvatarUrl"></MudImage>
                                                </MudAvatar>
                                                <MudLink Href="@assigne.HtmlUrl">@assigne.Login</MudLink>
                                            </MudStack>
                                        }
                                    </MudTabPanel>
                                    <MudTabPanel Icon="@Icons.Material.Filled.FactCheck" Text="Review">
                                        @foreach (var reviewer in context.Reviewers)
                                        {
                                            <MudStack Row="true">
                                                <MudAvatar>
                                                    <MudImage Src="@reviewer.AvatarUrl"></MudImage>
                                                </MudAvatar>
                                                <MudLink Href="@reviewer.HtmlUrl">@reviewer.Login</MudLink>
                                            </MudStack>
                                        }
                                    </MudTabPanel>
                                </MudTabs>
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudTabPanel>
            }
            @if(Branches.Select(b => b.Tags).Any())
            {
                <MudTabPanel Text="Tags" Icon="fa-solid fa-tag">
                    <MudPaper Width="300px">
                        <MudList T="string" Clickable="true">
                            @foreach(var tag in Branches.SelectMany(b => b.Tags))
                            {
                                <MudListItem Text="@tag" />
                            }
                        </MudList>
                    </MudPaper>
                </MudTabPanel>
            }
        </MudTabs>
    </DialogContent>
    <DialogActions>
        <MudSpacer />
        <MudButton Variant="Variant.Filled" OnClick="Cancel">@_localizer["Close"]</MudButton>
    </DialogActions>
</MudDialog>